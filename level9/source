#include <unistd.h>
#include <cstring>
#include <cstdlib>

class N {
public:
int nb;
	char annotation[100];

    N(int number) {
		this->nb = number;
	}
	int operator+(N &other)
	{
		return this->nb + other.nb;
	}
	int operator-(N &other)
	{
		return this->nb - other.nb;
	}
	void setAnnotation(char *str)
	{
		memcpy(this->annotation, str, strlen(str));
	}
};

int		main(int ac, char **av)
{
	if (ac <= 1)
		exit(1);

	N *a = new N(5);
	N *b = new N(6);

	a->setAnnotation(av[1]);
    return b->operator+(*a);
}